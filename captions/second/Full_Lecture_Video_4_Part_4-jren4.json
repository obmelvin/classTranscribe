[{"text":"","width":3856},{"text":"alright, so this is an attempt to write a shell","width":145},{"text":"it's attempting to get the users input one line at a time and then call exec() based on what the user entered","width":547},{"text":"the first thing you might conclude is that you need to fire this programmer and get a better one","width":305},{"text":"but let's see if we do better that. let's see if we can actually identify a few specific mistakes here","width":514},{"text":"let's see, does it even run?","width":540},{"text":"ok, so no we at least need to semicolon there","width":1137},{"text":"alright fine good so enter your command and I will exec it. ok, great we've got a shell lets try it! we'll try ls","width":736},{"text":"try cat","width":219},{"text":"ok, this is not a particularly useful shell yet","width":278},{"text":"how can we make it better? for starters let's print out an error message here saying exec() failed","width":947},{"text":"and see if we can figure out what's broken with this","width":341},{"text":"OK, ls. no such file or directory. what? well try /bin/ls. no such file - oops, come back","width":761},{"text":"now it's just sulking. it always prints no such file or directory","width":442},{"text":"what did we do wrong?","width":602},{"text":"OK, so here's a couple points from this. as you know the first argument should be the program name","width":426},{"text":"so let's change args[0] to point to the buffer","width":547},{"text":"what is args? it's an array of character pointers","width":325},{"text":"so we can change the entrance of that array. we're just changing the addresses held inside that array","width":365},{"text":"it's a very simple shell right now and it's just set up to be an array, a very simple array","width":285},{"text":"it's just set up to have two entries","width":129},{"text":"the first one initially points to a character string and then second one is null","width":282},{"text":"we want to change it to it at least points to the buffer. and we'll try this","width":506},{"text":"ok, right, ls","width":142},{"text":"no such file - ah - ok /bin/ls","width":184},{"text":"no such file or directory","width":319},{"text":"Darn <rand chars> still not working, but like what I said, part of being a systems programmer is to be tenacious","width":588},{"text":"your code is no longer the most complicated thing in the room","width":309},{"text":"and if you don't get things right it will bite you","width":167},{"text":"hopefully it will bite you sooner rather than later","width":173},{"text":"then we have a chance of fixing it","width":243},{"text":"maybe we should test our assumptions","width":324},{"text":"like what are we actually sending to execvp()","width":289},{"text":"for example let's actually have a look at the buffer","width":528},{"text":"alright, so let's run something we know exists","width":239},{"text":"look it's printing it out","width":126},{"text":"certainly we're sending it the right thing","width":956},{"text":"I'll even get rid of the fgets()","width":254},{"text":"whoops we've got an error. oh yeah I'm sorry it's an array so I have to strcpy() into the buffer","width":1292},{"text":"and that worked","width":387},{"text":"what is our error? if you think you know tell our neighbor","width":918},{"text":"ok, so here's our mistake. fgets() yes does read everything from the user including the new line","width":503},{"text":"and if I was to put a new line into here we would see the same thing and exec is very simple, it's looking for a program called ls with a new line that's part of it's name","width":766},{"text":"so this would now fail","width":194},{"text":"so what we need to do now is get rid of that new line","width":249},{"text":"okay how can we do that ","width":157},{"text":"well let's find out how many characters that we got into our buffer","width":347},{"text":"we'll assume for now that fgets() worked","width":497},{"text":"it may not, for example if someone closed standard in on us it would return null","width":274},{"text":"so we should do that when we want to write better programs","width":165},{"text":"right, so let's find out the number of characters in now the buffer","width":394},{"text":"how does it do that? it needs to walk along until it finds the 0 byte","width":320},{"text":"so for example we know that buffer[len] is the null byte","width":632},{"text":"yes?","width":236},{"text":"so we actually want to go back one byte","width":662},{"text":"and write in 0 or \\0 the null character","width":541},{"text":"will this work? let's try it ","width":566}]