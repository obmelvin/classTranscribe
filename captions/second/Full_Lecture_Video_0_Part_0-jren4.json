[{"text":"okay, good morning class, how are you","width":367},{"text":"I'm good thank you","width":103},{"text":"alright, for those of you that weren't paying attention, cs241 has started. good morning class, how are you?!","width":373},{"text":"alright, great. so, in the next 15 minutes the game of course is for you to leave this room with more passion for system programming and maybe some more knowledge about how to do it as well","width":668},{"text":"and maybe some knowledge about how not to do it as well","width":210},{"text":"so one of the intents here is cover gotchas and common programming mistakes","width":280},{"text":"so, if you have a burning question, there's probably someone else in this room that has the same question","width":321},{"text":"I will endeavor to answer as many questions as possible without derailing the lecture","width":238},{"text":"so feel free to speak up","width":135},{"text":"if it's not appropriate, I will tell you","width":115},{"text":"and, just stay, come down and talk to me afterwards","width":147},{"text":"also, I hold office hours usually three times a week immediately after lecture","width":265},{"text":"because I figured thats the best way to reach most of the students","width":238},{"text":"so feel free to stop me","width":150},{"text":"I may not be able to stay for a full hour every time","width":157},{"text":"for example, there's a faculty meeting today where we're talking about how to take over the world","width":276},{"text":"uiuc style","width":83},{"text":"but most times I'm there to help you","width":286},{"text":"and I love to see people progress. its fantastic stuff when you start from the beginning of this course when you don't know anything","width":397},{"text":"till the end where you can actually do some pretty cool things","width":187},{"text":"and by the way, last semester many students came to me to say \"hey! you know what? I just had an interview and they asked me to explain X\" where X is a cs241 thing","width":657},{"text":"such as, what's the difference between a process and a thread?","width":223},{"text":"whats the difference between stack memory and heap memory?","width":136},{"text":"how would you do that?","width":55},{"text":"what's a common gotcha with this?","width":104},{"text":"why would a C program crash? that kinda stuff","width":265},{"text":"so you might find that the knowledge you gain in this class actually has an immediate impact for you outside of this class","width":413},{"text":"and if it does, wonderful!","width":160},{"text":"alright, so, let's get started with a couple of trick questions","width":333},{"text":"that we have here, wanna go to overhead, right!","width":292},{"text":"okay! how do you look up information for C library calls and system calls?","width":228},{"text":"easy! okay, here's the beautiful thing. with POSIX, POSIX includes many things","width":605},{"text":"it includes an API (application programming interface) in other ways, instead of calls, you can call","width":392},{"text":"and also, a manual of man pages about those calls","width":374},{"text":"so guess what? we're actually going to look up different calls","width":227},{"text":"the art of course is knowing which calls you should use","width":329},{"text":"and the POSIX man pages aren't going to tell you that","width":202},{"text":"you already have to have a basic idea of \"oh yeah! I need to use open\" or \"or yes! I need to use write or stat or lstat or fork()\"","width":629},{"text":"so that's the main thing you're going to get out of this course is the vocabulary","width":264},{"text":"with the then end expectation that you would actually then start to use this stuff and look it up","width":320},{"text":"so we've got two different kinds of things. we've got C library calls and system calls","width":463},{"text":"the C library is the part of your process","width":188},{"text":"okay, what's the difference between a program and a process?","width":153},{"text":"well, the program is the code that you've written turned into bytes which say you stored on disk","width":339},{"text":"and then when you actually execute it, or actually run it, it becomes a process","width":274},{"text":"and of course you can have multiple processes running for the same piece of program code","width":310},{"text":"but part of that process is the C library","width":146},{"text":"it comes kind of bundled with or loaded at runtime and it's a set of code and maybe some constants too that just runs as part of it","width":524},{"text":"so what kind of C library calls do we have? well for example, perhaps you want to do a string copy where you want to say \"okay, copy all the bytes into a destination from a source\"","width":787},{"text":"and we're gonna pass two pointers and it will keep copying those bytes starting from source into destination until what?","width":666},{"text":"until it reaches a zero byte","width":156},{"text":"because that's the definition of a C string","width":192},{"text":"of course, bad things might happen if you accidentally put these in the wrong order","width":312},{"text":"alright, if you tried to copy from some arbitrary place into a different place, who knows how many bytes its gonna copy before it gets to zero? oops.","width":512},{"text":"who knows where its going to immediately crash your program?","width":171},{"text":"for example, it might be that you try to write into some read only memory","width":306},{"text":"and the hardware say \"ah ah excuse me? excuse me? you see that process over there? it's being a baaad baaaaad process\"","width":483},{"text":"ok lady gaga I might","width":107},{"text":"so, look I enjoyed that joke personally","width":296},{"text":"so, let's um, this is an example of a C library call. it doesn't need to go into the system to run this","width":635},{"text":"we can do this entirely inside the process space","width":218},{"text":"inside the virtual memory of our proces","width":226},{"text":"ok, what about system calls? well, here's an example of one, you've already seen it: \"write()\"","width":412},{"text":"we want to get outside of our system. we want to break out of our system and get the system to break outside of our process and do something","width":444},{"text":"to the rest of the world","width":123},{"text":"okay, so, the system itself needs to handle that particular call","width":361},{"text":"and in fact it does that using a hardware interrupt","width":262},{"text":"that's the red pill, if you follow the matrix movie","width":218},{"text":"that's how you escape out of the box. out of the sandbox that your poor little process is stuck inside","width":508},{"text":"anyway, so we want to look up say some information about these and so for that we can use \"man\"","width":420},{"text":"which reads man pages","width":154},{"text":"which are incredibly terse and utterly useless if you dont have some basic knowledge","width":322},{"text":"but pretty useful if you already know something about what you intend to do","width":369},{"text":"so let's try one","width":276},{"text":"box pc","width":392},{"text":"okay so let's try looking up for example \"printf()\"","width":317},{"text":"there it is","width":44},{"text":"and it's in section 3 of the man page","width":96},{"text":"okay yeah, we want to open it. there it is","width":125},{"text":"now what do we see about these man pages? well the things I want to show you is that first of all it tells you what includes you better have","width":448},{"text":"it also includes a whole load of function calls which do similar things","width":300},{"text":"so, as well as printf, we've got sprintf or snprintf","width":367},{"text":"and, then we've got some really terse information on what it's gonna do","width":286},{"text":"and usually its got a return value as well","width":299},{"text":"so they might return say the number of characters printed","width":316},{"text":"excluding the NULL byte used to end output strings","width":192},{"text":"notice how those display little parenthesis here as if its not that important","width":325},{"text":"as if the number of bytes written is not that important to you","width":189},{"text":"as if that could never cause a big program to fail","width":239},{"text":"accidentally, you might assume that that is the actual number of bytes written","width":218},{"text":"no no no, it excludes it and it's an off by one error","width":172},{"text":"it's actually going to ignore the fact that it may have written a zero at the end because it's the end of a C string","width":394},{"text":"oops! that's exciting.","width":107},{"text":"you may have not had enough memory. you may have overwritten something else","width":306},{"text":"so, when you read man pages, read them slowly and try to understand everything they say","width":443},{"text":"and of course, it's always useful to find an example","width":266},{"text":"oh, this one actually has one, look at that! amazing","width":194},{"text":"most of them don't bother with an example","width":101},{"text":"so you end up doing any google search to say \"okay, easy example of blah blah blah blah\"","width":339},{"text":"but yeah so they're a good reference material","width":220},{"text":"now you'll notice we had different sections","width":137}]