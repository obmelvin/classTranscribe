[{"text":"alright, good morning class, how are you?","width":4527},{"text":"oh! good! great! how's everyone else?","width":275},{"text":"okay....fine...ehhh...middle of the week blah blah","width":198},{"text":"okay so here we go. in blehh","width":307},{"text":"try again","width":35},{"text":"so, in the next fifty minutes here's what we're gonna do: we're gonna make sure you have a good understanding of fork exec wait, we're gonna look at a couple examples. we're gonna start about some common gotchas","width":732},{"text":"and a reminder that some interesting things are due for tomorrow's section!","width":354},{"text":"so, you might say well hold on a minute, this week's section makes me jump into the deep end with android and commit somehow to subversion. no explicit instructions. yeah, welcome to the real world","width":892},{"text":"or at least, welcome to a simulation of the real world","width":195},{"text":"as we kind of say goodbye to CS125 CS225 ecetera, we lose the training wheels a bit","width":552},{"text":"so yes, we will give you more explicit instructions in the future, don't panic quite so much. I just wanted to give you an experience of saying \"look, this is what its like\"","width":518},{"text":"yeah! It's evil it's tough. instructions are never as clear as you'd like them to be and something strange happens. people start looking at you as if you were the expert in the room","width":641},{"text":"just because you know a little bit more about say the other people working","width":227},{"text":"just because you've taken the time to say read the man pages or do twice as many google searches","width":357},{"text":"or just figure out the best way to work it","width":208},{"text":"and yes, in setting up things like android, it doesn't work first time","width":250},{"text":"so now, you need to be a hacker in that sense. of saying, what can I change? what can I break, what can I unbreak?","width":400},{"text":"perhaps I should try a different device. perhaps I should try plugging it in again. perhaps I should try turning off and on again, right?","width":342},{"text":"perhaps I should learn about uh, trying to, I've got a problem say it doesn't connect to android well. is it my device driver? how have I not set thing up correctly?","width":565},{"text":"perhaps I should I reread the instructions to see if I missed a step","width":225},{"text":"these little basic skills a software engineer has to have","width":389},{"text":"so, one one key skill that I hope you get out of this week's setting up the section is tenacity","width":621},{"text":"damnite you can be more stubborn than it","width":250},{"text":"that you can figure out ways to try and break down the problem. maybe I should try someone else's tablet. maybe someone else should try my tablet.","width":420},{"text":"maybe I should umm, uhh, do an experiment to see if something at the low level of the USB is noticing if the tablet is connected","width":495},{"text":"that kind of thing. maybe I should check to see if it's using the right version of java. etcetera etcetera etcetera.","width":360},{"text":"try to take a problem and breaking it down and using your brain cells to try to make progress.","width":372},{"text":"I didn't say it was going to be easy, yeah, welcome to the real life.","width":219},{"text":"okay, well, welcome to real life","width":105},{"text":"right, so, enough! let's put that aside. the next thing you'll need for section is to make \"make\"","width":490},{"text":"or as we fall it, \"fake\", alright","width":166},{"text":"so, why?","width":81},{"text":"because make allows us to build larger programs and at the end of the day, guess what? it's just a C program","width":450},{"text":"it reads in a set of commands to execute...and executes them!","width":312},{"text":"except it tries to do it with some sophistication","width":216},{"text":"so rather than, for example, compiling all possible programs, why don't we compile the ones which have already recently been edited?","width":574},{"text":"or let's make it so that we can make a debug version and a release version","width":247},{"text":"or let's make it so that it works not just for C programs, but with python. you can even use \"make\" by the way, to generate thumbnails of images","width":522},{"text":"so next time you change an image, you can automatically generate thumbnails","width":271},{"text":"I used it in the videos because when I exported each of the little 7 minute videos as an mp4 file, I wanted to have an old version, I wanted to have a webm version, the basic 3 formats of video on html 5 these days","width":995},{"text":"and so I used \"make\". any time I made a new version of the, uh, I, anytime I exported a new mp4 file, I produced make to say \"oh! look! this source file (my mp4) is newer than the targets (or the targets don't exist)\"","width":1087},{"text":"then I get make to run a transcoding program to generate the other versions","width":330},{"text":"so make is very powerful","width":88},{"text":"and you can also set it up to do things in parallel which is fantastic if you happen to have, say, 8 cores, or 200 cores","width":541},{"text":"you can make things go much faster","width":191},{"text":"alright so, let's turn our attention to some code here. we're playing with fork() and we've got it set up so that after fork returns, I'm going to get the parent and the child to do completely different things","width":1342},{"text":"I put them into two different functions","width":198},{"text":"so, remember, after fork returns, so let's write our little fork here","width":315},{"text":"you've now got two processes, you're writing code for two separate processes, isn't that cool?","width":386},{"text":"they happen to share a common ancestry so all of their variables currently have the same values for example (apart from the return value of fork)","width":609},{"text":"so, now we make them kind of have different futures. different histories.","width":422},{"text":"okay so, that's the kind of first important thing, first importantly to remember is that you're writing code once, but it's going to go for multiple processes.","width":748},{"text":"it just so happens that we can use return value of fork() to do two different things. okay so, I checked so that the value is greater than 0","width":562},{"text":"if it is, then I must be the parent","width":196},{"text":"if it's zero, then I must be the child","width":203},{"text":"so let's run to the code. there's actually one other case. fork() could fail. if it does, what's it return?","width":524},{"text":"negative one, yes","width":88},{"text":"so, we should print an error to say \"hey, fork failed\"","width":324},{"text":"what's the easiest way to do that?","width":287},{"text":"just use perror() !","width":267},{"text":"so print perror prints out whatever you said, followed by a colon, followed by a completely cryptic error message which is completely useless to users but hopefully gives you a little idea about at what point your program failed.","width":967},{"text":"so as you start to write more complicated programs, it becomes important to check for the return values. and in fact it's quite usual (just read the man page) to discover that it returns, say, zero, or more likely negative one","width":821},{"text":"if things fail","width":84},{"text":"so when writing more programs, when it doesn't work, say \"oh okay! when did it stop working?\"","width":406},{"text":"maybe I should actually check return values and discover when it broke","width":252}]