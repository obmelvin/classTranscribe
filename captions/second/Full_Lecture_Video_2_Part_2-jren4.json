[{"text":"okay so we did not see hello in our output","width":327},{"text":"but if we have a look down here we'll see we've got a program called log.txt","width":237},{"text":"let's have a look at log.txt","width":215},{"text":"and it says oh okay it seems to be working, let's see if it appends to it","width":471},{"text":"and then it says hello hello alright so we're appending stuff to our log file","width":250},{"text":"we've changed the output of our process to go to this file","width":411},{"text":"now why is it that that happened?","width":118},{"text":"well if we were to read the man page carefully enough about open","width":218},{"text":"it says it returns the lowest non-negative integer","width":349},{"text":"for a file descriptor and we just closed one","width":234},{"text":"so when we do this, it's going to open file descriptor one","width":333},{"text":"which is what everything then uses when you call puts, printf, etc","width":282},{"text":"so we've now just changed our standard output to go to a file","width":512},{"text":"right then we call chdir, what does chdir do, it has nothing to do with cheese","width":686},{"text":"change directory! yes, our core process not only has memory for say the variables that we create","width":500},{"text":"we've got other things inside our process","width":90},{"text":"we've just seen one thing, which is it's got these file descriptors","width":190},{"text":"each process has file descriptors","width":171},{"text":"also each process has a current directory","width":183},{"text":"so when we say hey I want to open a file called log.txt and we haven't specified it's full path","width":334},{"text":"it's relative to its current directory","width":389},{"text":"so for example, if I had put up here \"hey chdir and let's change our directory to just kind of slash\"","width":795},{"text":"okay, let's run this","width":372},{"text":"then slash is the root directory and if we look at the root of our disk drive, now we've managed to make a file called log.txt","width":633},{"text":"here we go and it's contents is just hello hello","width":330},{"text":"right so okay what have we done? we've done chdir. so we've said chrdir to usr/include","width":832},{"text":"let's just have a quick look inside there because what is inside ls /usr/include/","width":412},{"text":"a whole lot of dot h files","width":83},{"text":"remember in your c files and your c++ files when you say #include std.io hash include this hash include that","width":405},{"text":"they are just files, here they are!","width":354},{"text":"so next time your friend walks away, why not edit one of them?","width":684},{"text":"uh do I have vim on this machine? maybe I have stdlib.h","width":307},{"text":"oh I need to be inside that directory","width":96},{"text":"okay cd /usr/include/","width":162},{"text":"let's so stdlib.h and it's a bit of a mess but nevermind","width":412},{"text":"we can say things like whoops not working, not implemented anyways...","width":688},{"text":"we can do #define if while","width":589},{"text":"so if you hash define if while, that means anytime you see an if, it's going to replace that with the letters w h i l e","width":770},{"text":"very useful if your class is curved, right","width":283},{"text":"alright so we've talked about chdir and we've talked about /usr/include","width":309},{"text":"now we can have some fun, so we have this, let's just go back to my original directory","width":536},{"text":"uh hello, alright I'll reboot the machine","width":426},{"text":"right so we have this exec exec thing okay here we go","width":625},{"text":"what does exec do?","width":1052},{"text":"alright suppose you were thinking about something, you're running a program inside your head","width":243},{"text":"exec says hey forget that program, do this other thing instead","width":372},{"text":"it's a complete mind wipe of your process","width":283},{"text":"whatever it was doing, whatever variables you created, whatever memory allocated, it's gone!","width":372},{"text":"you're saying this process will now actually be executing this other image","width":265},{"text":"right, load this other executable from disk and run that instead","width":331},{"text":"so we will run this right","width":773},{"text":"alright so when I run my program now, it actually runs ls","width":1060},{"text":"it actually gives me the contents of the current directory which is just a dot","width":404},{"text":"now here's something weird, I can understand that the last argument here might be null to mean \"hey i've got no more things I want to talk about here\"","width":480},{"text":"but why is it that I've got /bin/ls twice?","width":728},{"text":"okay, here's why: the first one is the command that you actually want to execute","width":448},{"text":"so inside /bin there is a whole load of commands","width":263},{"text":"here I think we've looked at them before","width":579},{"text":"but remember, when you run a command, you want to give it arguments","width":182},{"text":"so when I call say ls, so here it is exactly, I need to say okay what do I want to do?","width":440},{"text":"well I want to look inside /usr/include","width":176},{"text":"but that's not what the program sees","width":114},{"text":"the program sees the arguments you provide also its own name","width":353},{"text":"the name that it's running as","width":152},{"text":"so that's why you see the exec/ls twice","width":231},{"text":"because this is the program that we want to run and this is the argument zero that it will get inside main","width":562},{"text":"so we could probably change this to just say ls for example","width":293},{"text":"okay so that'e exec, notice that my program never printed hello world","width":310},{"text":"that's right, it had a mind wipe","width":101},{"text":"if exec works, we never return, we don't execute anymore code here","width":374},{"text":"so the only way to say print out hello world is to make it deliberately fail","width":352},{"text":"I'm pretty confident that that program, that image does not exist","width":234},{"text":"so exec will fail, it will return -1 and now it prints hello world","width":324},{"text":"it continued on and in fact we can actually print something useful by using perror","width":634},{"text":"my exec failed and we used perror","width":277},{"text":"it prints out your string a colon and a little message here","width":261},{"text":"so here we go, my exec failed: no such file or directory","width":309},{"text":"doesn't tell you which line it failed on but at least you have a hint as to the kind of error that happened","width":569}]