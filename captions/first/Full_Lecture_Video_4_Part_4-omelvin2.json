[{"text":"","width":3840},{"text":"alright, so this is an attempt to write a shell","width":128},{"text":"it's attempting to get the users input one line at a time and then call exec() based on what the user entered","width":512},{"text":"the first thing you might conclude is that you need to fire this programmer and get a better one","width":448},{"text":"but let's see if we do better that. let's see if we can actually identify a few specific mistakes here","width":384},{"text":"um, let's see, does it even run?","width":640},{"text":"ok, so now we at least need to set a kernel","width":1088},{"text":"so enter your command and I will exec it. ok, great we've got a shell lets try it! we'll try ls","width":768},{"text":"try cat","width":192},{"text":"ok, this is not a particularly useful shell yet","width":320},{"text":"how can we make it better? for starters let's print out an error message here saying exec() failed","width":896},{"text":"and see if we can figure out what's broken with this","width":320},{"text":"OK, ls. no such file or directory. what? well try /bin/ls. no such file - oops, come back","width":896},{"text":"now it's just sulking. it always prints no such file or directory","width":384},{"text":"what did we do wrong?","width":576},{"text":"OK, so here's a couple points from this. as you know the first argument should be the program name","width":448},{"text":"so let's change args[0] to point to the buffer","width":512},{"text":"what is args? it's an array of character pointers","width":320},{"text":"so we can change the entrance of that array. we're just changing the addresses held inside that array","width":384},{"text":"it's a very simple shell right now and it's just set up to be an array, a very simple array","width":384},{"text":"it's just set up to have two entries","width":128},{"text":"the first one initially points to a character string and then second one is null","width":192},{"text":"we want to change it to it at least points to the buffer. and we'll try this","width":512},{"text":"ok, right, ls","width":128},{"text":"no such file - ah - ok /bin/ls","width":256},{"text":"no such file or directory","width":256},{"text":"Darn <rand chars> still not working, but like what I said, part of being a systems programmer is to be tenacious","width":576},{"text":"your code is no longer the most complicated thing in the room","width":320},{"text":"and if you don't get things right it will bite you","width":192},{"text":"hopefully it will bite you sooner rather than later","width":192},{"text":"then we have a chance of fixing it","width":192},{"text":"maybe we should test our assumptions","width":320},{"text":"like what are we actually sending to execvp()","width":320},{"text":"for example let's actually have a look at the buffer","width":512},{"text":"alright, so let's run something we know exists","width":256},{"text":"look it's printing it out","width":128},{"text":"certainly we're sending it the right thing","width":960},{"text":"I'll even get rid of the fgets()","width":256},{"text":"whoops we've got an error. oh yeah I'm sorry it's an array so I have to strcpy() into the buffer","width":1280},{"text":"and that worked","width":384},{"text":"what is our error? if you think you know tell our neighbor","width":896},{"text":"ok, so here's our mistake. fgets() yes does read everything from the user including the new line","width":576},{"text":"and if I was to put a new line into here we would see the same thing and exec is very simple, it's looking for a program called ls with a new line that's part of it's name","width":832},{"text":"so this would now fail","width":128},{"text":"so what we need to do now is get rid of that new line","width":256},{"text":"how can we do that ","width":192},{"text":"well let's find out how many characters that we got into our buffer","width":320},{"text":"we","width":64},{"text":"we'll assume for now that fgets() worked","width":448},{"text":"it may not, for example if someone closed standard in on us it would return null","width":384},{"text":"so we should do that when we want to write better programs","width":128},{"text":"right, so let's find out the number of characters in now the buffer","width":384},{"text":"how does it do that? it needs to walk along until it finds the 0 byte","width":448},{"text":"so for example we know that buffer[len] is the null byte","width":448},{"text":"yes?","width":256},{"text":"so we actually want to go back one byte","width":704},{"text":"and write in 0 or \\0 the null character","width":512},{"text":"will this work? let's try it ","width":576}]