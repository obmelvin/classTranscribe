[{"text":"ok, so that's the beginning of my program. I've made some gaps in here","width":256},{"text":"and so perhaps you and your neighbor could fill in the necessary code on this program","width":640},{"text":"and figure out what we should write for the child and the parent","width":20288},{"text":"in the child process we want to ask for an alarm signal please","width":384},{"text":"so we can say alarm() one, which means in one second or so the operating system will deliver, will send a SIGALARM to that particular process","width":896},{"text":"and once the - what happens by default when you send a SIGALARM to a process?","width":576},{"text":"it kills it, right! that's a pretty evil alarm signal, yes?","width":256},{"text":"but that's what the default behavior does","width":128},{"text":"we could stop that if we wanted by registering a sig handler, but today we're not going to do that. instead we're merely going to sleep for two seconds","width":640},{"text":"after we sleep for two seconds we're going to print something out and then we want to exit normally","width":320},{"text":"how do I do that? i just say exit() and let's give a return value like 0","width":384},{"text":"my child process is pretty simple","width":192},{"text":"now the parent is going to wait for the child to finish","width":320},{"text":"how do we do that?","width":64},{"text":"we can call waitpid() pass in the process id of the child","width":512},{"text":"we","width":64},{"text":"would like to collect some information so status and we don't need any flags today","width":192},{"text":"ok, so how do we decide if the child has exited normally or not?","width":512},{"text":"well let's do that one, so that one was - what WIFEXIT or EXITED, I'll have to look it up in amoment","width":704},{"text":"and now we need the exit status so let's find out what it said","width":512}]